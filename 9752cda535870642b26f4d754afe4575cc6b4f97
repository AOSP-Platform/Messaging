{
  "comments": [
    {
      "key": {
        "uuid": "3dc6e84f_c86151ef",
        "filename": "tests/src/com/android/messaging/datamodel/action/GetOrCreateConversationActionTest.java",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2018-12-01T07:01:26Z",
      "side": 1,
      "message": "Does this pass on the 1st run? I don\u0027t see how something that was null becomes a number + 1.",
      "revId": "9752cda535870642b26f4d754afe4575cc6b4f97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0273e883_76162ad5",
        "filename": "tests/src/com/android/messaging/datamodel/action/GetOrCreateConversationActionTest.java",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1338311
      },
      "writtenOn": "2018-12-03T02:13:52Z",
      "side": 1,
      "message": "\u003e Does this pass on the 1st run?\n\nIt does. Tested it one more time and tested it multiple times. The following is after the assert was changed (before that it was always failing).\n\n$ grep -n -i \u0027GetOrCreateConversationActionTest\u0027 ~/temp/logcat/1130/logcat.out.old_message.1202.1744\n\n4443:12-01 03:53:07.352  9649  9665 I TestRunner: finished: testGetOrCreateConversation(com.android.messaging.datamodel.action.GetOrCreateConversationActionTest)\n4444:12-01 03:53:07.352  9649  9665 I TestRunner: passed: testGetOrCreateConversation(com.android.messaging.datamodel.action.GetOrCreateConversationActionTest)\n14741:12-03 01:45:57.296 14029 14050 I TestRunner: started: testGetOrCreateConversation(com.android.messaging.datamodel.action.GetOrCreateConversationActionTest)\n14750:12-03 01:45:57.299 14029 14050 E MessagingApp:    at com.android.messaging.datamodel.action.GetOrCreateConversationActionTest.setUp(GetOrCreateConversationActionTest.java:149)\n14763:12-03 01:45:57.335 14029 14050 I TestRunner: finished: testGetOrCreateConversation(com.android.messaging.datamodel.action.GetOrCreateConversationActionTest)\n14764:12-03 01:45:57.335 14029 14050 I TestRunner: passed: testGetOrCreateConversation(com.android.messaging.datamodel.action.GetOrCreateConversationActionTest)\n17385:12-03 01:47:06.843 14132 14150 I TestRunner: started: testGetOrCreateConversation(com.android.messaging.datamodel.action.GetOrCreateConversationActionTest)\n17394:12-03 01:47:06.845 14132 14150 E MessagingApp:    at com.android.messaging.datamodel.action.GetOrCreateConversationActionTest.setUp(GetOrCreateConversationActionTest.java:149)\n17407:12-03 01:47:06.868 14132 14150 I TestRunner: finished: testGetOrCreateConversation(com.android.messaging.datamodel.action.GetOrCreateConversationActionTest)\n17408:12-03 01:47:06.868 14132 14150 I TestRunner: passed: testGetOrCreateConversation(com.android.messaging.datamodel.action.GetOrCreateConversationActionTest)\n20011:12-03 01:48:20.235 14228 14244 I TestRunner: started: testGetOrCreateConversation(com.android.messaging.datamodel.action.GetOrCreateConversationActionTest)\n20020:12-03 01:48:20.237 14228 14244 E MessagingApp:    at com.android.messaging.datamodel.action.GetOrCreateConversationActionTest.setUp(GetOrCreateConversationActionTest.java:149)\n20033:12-03 01:48:20.263 14228 14244 I TestRunner: finished: testGetOrCreateConversation(com.android.messaging.datamodel.action.GetOrCreateConversationActionTest)\n20034:12-03 01:48:20.263 14228 14244 I TestRunner: passed: testGetOrCreateConversation(com.android.messaging.datamodel.action.GetOrCreateConversationActionTest)\n22667:12-03 01:50:44.208 14325 14341 I TestRunner: started: testGetOrCreateConversation(com.android.messaging.datamodel.action.GetOrCreateConversationActionTest)\n22676:12-03 01:50:44.209 14325 14341 E MessagingApp:    at com.android.messaging.datamodel.action.GetOrCreateConversationActionTest.setUp(GetOrCreateConversationActionTest.java:149)\n22689:12-03 01:50:44.236 14325 14341 I TestRunner: finished: testGetOrCreateConversation(com.android.messaging.datamodel.action.GetOrCreateConversationActionTest)\n22690:12-03 01:50:44.236 14325 14341 I TestRunner: passed: testGetOrCreateConversation(com.android.messaging.datamodel.action.GetOrCreateConversationActionTest)\n~\n\n\n\u003e  I don\u0027t see how something that was null becomes a number + 1.\n\nThe assert was false. CC\u0027ing mdodd@ who checked in the code in 2015 and it wasn\u0027t changed after that.\n\nThese tests never ran before this change. We could delete the check for blankId. \n\n/packages/apps/Messaging/tests/src/com/android/messaging/datamodel/action/ GetOrCreateConversationActionTest.java creates FakeDataModel and that creates testdata which inserts 10 conversations.\n\n\n        mService \u003d new StubActionService();\n        final FakeDataModel fakeDataModel \u003d new FakeDataModel(mContext)\n            .withActionService(mService);\n        FakeFactory.registerWithFakeContext(getTestContext(), mContext)\n\n\n\npackages/apps/Messaging/src/com/android/messaging/datamodel:\n\n    private static void createDatabase(final SQLiteDatabase db) {\n        for (final String sql : CREATE_TABLE_SQLS) {\n....\n        DataModel.get().onCreateTables(db);\n\n\n/packages/apps/Messaging/tests/src/com/android/messaging/datamodel/ FakeDataModel.java creates the testdata every time \n\n    @Override\n    void onCreateTables(final SQLiteDatabase db) {\n        TestDataFactory.createTestData(db);\n    }\n\npackages/apps/Messaging/tests/src/com/android/messaging/datamodel/data/TestDataFactory.java created 10 conversations. \n\n    public static final int NUM_TEST_CONVERSATIONS \u003d 10;\n\n    /**\n     * Create test data in our db.\n     *\n     * Ideally this will create more realistic data with more variety.\n     */\n    public static void createTestData(final SQLiteDatabase db) {\n        BugleDatabaseOperations.clearParticipantIdCache();\n\n        // Timestamp for 1 day ago\n        final long yesterday \u003d System.currentTimeMillis() - (24 * 60 * 60 * 1000);\n\n        final ContentValues conversationValues \u003d new ContentValues();\n        for (int i \u003d 1; i \u003c\u003d NUM_TEST_CONVERSATIONS; i++) {\n            conversationValues.put(ConversationColumns.NAME, \"Conversation \" + i);\n            final long conversationId \u003d db.insert(DatabaseHelper.CONVERSATIONS_TABLE, null,\n                    conversationValues);\n\npackages/apps/Messaging/src/com/android/messaging/datamodel/ BugleDatabaseOperations.java returns the number of conversations.\n\n    public static String getExistingConversation(final DatabaseWrapper dbWrapper,\n            final long threadId, final boolean senderBlocked) {\n        Assert.isNotMainThread();\n        String conversationId \u003d null;\n\n        Cursor cursor \u003d null;\n        try {\n            // Look for an existing conversation in the db with this thread id\n            cursor \u003d dbWrapper.rawQuery(\"SELECT \" + ConversationColumns._ID\n                            + \" FROM \" + DatabaseHelper.CONVERSATIONS_TABLE\n                            + \" WHERE \" + ConversationColumns.SMS_THREAD_ID + \"\u003d\" + threadId,\n                    null);",
      "parentUuid": "3dc6e84f_c86151ef",
      "revId": "9752cda535870642b26f4d754afe4575cc6b4f97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}